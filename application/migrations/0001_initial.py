# Generated by Django 5.0.7 on 2024-07-25 03:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        default="assets/img/avatar.png", upload_to="images/users/"
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("title", models.CharField(max_length=255, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        default="O",
                        max_length=1,
                    ),
                ),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("SUPERVISOR", "Supervisor"),
                            ("ADMIN", "Admin"),
                            ("COLLECTOR", "Collector"),
                            ("USER", "User"),
                        ],
                        default="USER",
                        max_length=10,
                    ),
                ),
                ("province", models.CharField(max_length=50)),
                ("city", models.CharField(max_length=50)),
                ("role", models.CharField(max_length=50)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Femme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "menage",
                    models.CharField(
                        choices=[
                            ("Bushwira", "Bushwira"),
                            ("Mbobero", "Mbobero"),
                            ("Kagabi", "Kagabi"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "appliquer_questionnaire",
                    models.CharField(
                        choices=[
                            ("1ère fois", "1ère fois"),
                            ("2e fois", "2e fois"),
                            ("3e fois", "3e fois"),
                        ],
                        max_length=20,
                    ),
                ),
                ("name_femme", models.CharField(max_length=100)),
                ("numero_tel_femme", models.CharField(max_length=20)),
                (
                    "form_file",
                    models.ImageField(blank=True, null=True, upload_to="femme_images/"),
                ),
                ("age_femme", models.IntegerField()),
                (
                    "scolarite_femme",
                    models.CharField(
                        choices=[
                            ("Jamais scolarisée", "Jamais scolarisée"),
                            ("Primaire", "Primaire"),
                            ("Secondaire", "Secondaire"),
                            ("Universitaire/Supérieur", "Universitaire/Supérieur"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "genreProbleme",
                    models.CharField(
                        choices=[
                            ("Financier", "Financier"),
                            ("Social", "Social"),
                            ("Culturel", "Culturel"),
                            ("Grossesse", "Grossesse"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("descriptionCasFemme", models.TextField()),
                ("titleCase", models.CharField(max_length=100)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_post", models.DateField(auto_created=True)),
                (
                    "genre_probleme",
                    models.CharField(
                        choices=[
                            ("Financier", "Financier"),
                            ("Social", "Social"),
                            ("Culturel", "Culturel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("date_probleme", models.DateField()),
                ("time_probleme", models.TimeField()),
                ("titreProbleme", models.TimeField()),
                ("description_cas_probleme", models.TextField()),
                (
                    "province_cas_probleme",
                    models.CharField(
                        choices=[
                            ("Bukavu", "Bukavu"),
                            ("Kabare", "Kabare"),
                            ("Walungu", "Walungu"),
                            ("Fizi", "Fizi"),
                            ("Mwenga", "Mwenga"),
                        ],
                        max_length=20,
                    ),
                ),
                ("precision_endroit_probleme", models.CharField(max_length=255)),
                ("anticipation_aide", models.TextField()),
                ("acteur_cause_probleme", models.CharField(max_length=255)),
                ("appliquer_questionnaire", models.TextField()),
                ("presumes_acteurs", models.TextField()),
                ("problem_victiomes", models.TextField()),
                ("consequences_problemes", models.TextField()),
                (
                    "images_preuves_probleme",
                    models.ImageField(
                        blank=True, null=True, upload_to="problem_images/"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
